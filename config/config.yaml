smqtt:
  logLevel: INFO # 系统日志
  tcp: # tcp配置
    port: 1883 # mqtt端口号
    wiretap: false  # 二进制日志 前提是 smqtt.logLevel = DEBUG
    bossThreadSize: 8  # boss线程 默认=cpu核心数
    workThreadSize: 16 # work线程 默认=cpu核心数*2
    businessThreadSize: 32 # 业务线程数 默认=cpu核心数*10
    businessQueueSize: 100000 #业务队列 默认=100000
    messageMaxSize: 4194304 # 接收消息的最大限制 默认4194304(4M)
    lowWaterMark: 4000000 # 不建议配置 默认 32768
    highWaterMark: 80000000 # 不建议配置 默认 65536
    # globalReadWriteSize: 10000000,100000000  全局读写大小限制
    # channelReadWriteSize: 10000000,100000000 单个channel读写大小限制
    ssl:
      crt: C:\Users\luxurong\Desktop\官网nginx部署\10034861_fluxmq.com.pem
      key: C:\Users\luxurong\Desktop\官网nginx部署\10034861_fluxmq.com.key
    options:
      SO_BACKLOG: 2000
  auth:
    fixed:
      username: smqtt
      password: smqtt
  http: # http相关配置 端口固定60000
    host: 127.0.0.1
    accessLog: true # http访问日志
    admin: # 后台管理配置
      username: smqtt # 访问用户名
      password: smqtt # 访问密码
  ws: # websocket配置
    enable: true # 开关
    port: 8999 # 端口
    path: /mqtt # ws 的访问path mqtt.js请设置此选项
  cluster: # 集群配置
    addresses: ["127.0.0.1"]
  meter:
    meterType: PROMETHEUS # INFLUXDB , PROMETHEUS
#  rules: # 规则引擎相关配置
#    - ruleName: 过滤
#      chain: # 规则链
#        - ruleType: PREDICATE  # 条件过滤器
#          script: $.event.equals("publish")
#        - ruleType: KAFKA  # 条件过滤器
#          script: "{'topic':topic,'body':body,'qos':qos}"
#        - ruleType: DATA_BASE # MYSQL过滤器
#          script: insert into device_msg (clientIdentifier,topic,qos,retain,msg) value ('${clientId}','${topic}','${qos}',${retain},'${msg}')
#  sources: # 配置数据源sources
#  - source: DATA_BASE
#    sourceName: dataBase
#    sourceAttributes:
#        jdbcUrl: jdbc:mysql://121.40.92.152:3306/smqtt
#        username: root
#        password: lxr7293209qq
#        dataSource-cachePrepStmts: true
#        dataSource-prepStmtCacheSize: 250
#        dataSource-prepStmtCacheSqlLimit: 2048
#        dataSource-useServerPrepStmts: true
#        dataSource-useLocalSessionState: true
#        dataSource-rewriteBatchedStatements: true
#        dataSource-cacheResultSetMetadata: true
#        dataSource-cacheServerConfiguration: true
#        dataSource-elideSetAutoCommits: true
#        dataSource-maintainTimeStats: false